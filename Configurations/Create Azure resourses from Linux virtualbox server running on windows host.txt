Create Azure resourses from Linx virtualbox server running on windows host 

This exercise is designed to use ansible for create an Azure services using a linux Virtual MAchine running on windows Host

linux machine must be configured to connect azure from NAT device and ssh from Windows Host thru host-only adapter
this configuration is out of scope from this exercie.
 
1- configure Azure access from external server
* instrcutions are taken from this Microsoft site 	https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal

	a. Sign in to your Azure Account through the Azure portal.
	b. Select Azure Active Directory.
	c. Select App registrations.
	d. Select New registration.
	e. Name the application. 
		Select a supported account type, which determines who can use the application. 
		Under Redirect URI, select Web for the type of application you want to create. 
		Enter the URI where the access token is sent to. You can't create credentials for a Native application. 
		You can't use that type for an automated application. 
		After setting the values, select Register.

2- Assign a role to the application
	a) In the Azure portal, select the level of scope you wish to assign the application to. 
		For example, to assign a role at the subscription scope, search for and select Subscriptions, or select Subscriptions on the Home page.
	b) Select Access control (IAM).
	c) Select Add role assignment.
	d) Select the role you wish to assign to the application. 
		For example, to allow the application to execute actions like reboot, start and stop instances, 
		select the Contributor role. 
	c) Select Save to finish assigning the role. 
		You see your application in the list of users with a role for that scope.
	Note: Your service principal is set up. 
		You can start using it to run your scripts or apps. 
		
		
Get values for signing in
1-	When programmatically signing in, you need to pass the tenant ID with your authentication request. 
	You also need the ID for your application and an authentication key. 
		To get those values, use the following steps:
	
		a)Select Azure Active Directory.
		b) From App registrations in Azure AD, select your application.
		c) Copy the Directory (tenant) ID and store it in your application code.
		Note: this information wil be used on azure credential configuration file on Linux server
		
2- Create Upload Certificate
	Follow below instructions to create/upload local machine certificated
	New-SelfSignedCertificate https://docs.microsoft.com/en-us/powershell/module/pkiclient/new-selfsignedcertificate?view=win10-ps

	a) Open PowerShell and run "New-SelfSignedCertificate" with the following parameters to create a self-signed certificate in the user certificate store on your computer: 
	 PS> $cert=New-SelfSignedCertificate -Subject "CN=DaemonConsoleCert" -CertStoreLocation "Cert:\CurrentUser\My"  -KeyExportPolicy Exportable -KeySpec Signature
	 
	b) export certificated following below microsoft link
		https://docs.microsoft.com/en-us/dotnet/framework/wcf/feature-details/how-to-view-certificates-with-the-mmc-snap-in
	
		b1)Export this certificate to a file using the Manage User Certificate MMC snap-in accessible from the Windows Control Panel.
			Select Run from the Start menu, and then enter certmgr.msc.
			The Certificate Manager tool for the current user appears.
			To view your certificates, under Certificates - 
				Current User in the left pane, expand the Personal directory.
				Right-click on the cert you created, select All tasks->Export.
				Follow the Certificate Export wizard. 
					Export the private key, 
						specify a password for the cert file, and export to a file.
		
		b2)To upload the certificate:
			Select Azure Active Directory.
			From App registrations in Azure AD, select your application.
			Select Certificates & secrets.
			Select Upload certificate and select the certificate (an existing certificate or the self-signed certificate you exported).
			Select Upload certificate and select the one you want to add
			Select Add.
		
	

	c) Create a new application secret (If you choose not to use a certificate, you can create a new application secret.)
		Select Certificates & secrets.
		Select Client secrets -> New client secret.
		Provide a description of the secret, and a duration. When done, select Add.
		After saving the client secret, the value of the client secret is displayed. Copy this value because you won't be able to retrieve the key later. You will provide the key value with the application ID to sign in as the application. Store the key value where your application can retrieve it.
		Copy the secret value because you can't retrieve this later
		Configure access policies on resources
		Keep in mind, you might need to configure addition permissions on resources that your application needs to access. 
			For example, you must also update a key vault's access policies to give your application access to keys, secrets, or certificates.

		In the Azure portal, navigate to your key vault and select Access policies.
		Select Add access policy, then select the key, secret, and certificate permissions you want to grant your application. Select the service principal you created previously.
		Select Add to add the access policy, then Save to commit your changes. Add access policy
		
	d) Required permissions
		You must have sufficient permissions to register an application with your Azure AD tenant, and assign to the application a role 
		in your Azure subscription.

			Check Azure AD permissions
			Select Azure Active Directory.
			Note your role. If you have the User role, you must make sure that non-administrators can register applications.
			Find your role. If you're a User, ensure non-admins can register apps
			In the left pane, select User settings.
			Check the App registrations setting. This value can only be set by an administrator. 
				If set to Yes, any user in the Azure AD tenant can register an app.
			If the app registrations setting is set to No, only users with an administrator role may register these types of applications. 
				See available roles and role permissions to learn about available administrator roles and the specific permissions in Azure AD 
				that are given to each role. If your account is assigned the User role, but the app registration setting is limited to admin users, 
				ask your administrator to either assign you one of the administrator roles that can create and manage all aspects of app registrations, 
				or to enable users to register apps.
				
	e) Check Azure subscription permissions
		In your Azure subscription, your account must have Microsoft.Authorization/*/Write access to assign a role to an AD app. 
			This action is granted through the Owner role or User Access Administrator role. If your account is assigned the Contributor role, you don't have adequate permission. You will receive an error when attempting to assign the service principal a role.

		To check your subscription permissions:
		Search for and select Subscriptions, or select Subscriptions on the Home page.
		Search
		Select the subscription you want to create the service principal in.
		Select subscription for assignment
		If you don't see the subscription you're looking for, select global subscriptions filter. 
			Make sure the subscription you want is selected for the portal.
		Select My permissions. Then, select Click here to view complete access details for this subscription.
		Select View in Role assignments to view your assigned roles, and determine if you have adequate permissions to assign a role to an AD app. 
			If not, ask your subscription administrator to add you to User Access Administrator role. 
			In the following image, the user is assigned the Owner role, which means that user has adequate permission