Using a Docker Bridge Network

Escenario:
Your fruit stand company has a Docker server set up to run three application components. 
There is a base-price component which serves a list of the base prices for the products sold at the fruit stand. 
There is also a sales component which provides a list of products that are on sale and their discount percentages. 
Finally, there is a total-price component that queries data from the other two services and calculates the total price for each item, 
including the discounts from sales.

You have been asked to configure these three components by running containers on the Docker server. 
They need to communicate with each other using their own bridge network, which you will also need to create. 
A Docker server has been made available for you to use.

Configure these application components on the Docker server so that the following specifications are met:

Create a bridge network called prices-net.
Run a container called base-price with the linuxacademycontent/prices-base-price:1 image. 
Configure this container to use the prices-net network.

Run a container called sales with the linuxacademycontent/prices-sales:1 image. 
Configure this container to use the prices-net network.

Run a container called total-price with the linuxacademycontent/prices-total-price:1 image. 
Configure this container to use the prices-net network. 
Publish this container's port 80 to port 8080 on the host.

If everything is set up correctly, you should be able to access the total prices list with curl localhost:8080.

---------------------------------------------------------------------------------------------------------------------

####Create the bridge network.
Create a bridge network called prices-net.

cloud_user@ip-10-0-1-101:~$ docker network create --driver bridge proces-net
8e9229eb74c12fd69b67f2928387ac298285d012e5c526642ecaee38f55b2ebb


###Create the base-price container.
## Create a container for the component that serves base prices.
docker run --name sales -d --network prices-net linuxacademycontent/prices-sales:1
cloud_user@ip-10-0-1-101:~$ docker run --name base-price -d --network prices-net linuxacademycontent/prices-base-price:1
Unable to find image 'linuxacademycontent/prices-base-price:1' locally
1: Pulling from linuxacademycontent/prices-base-price
6ae821421a7d: Pull complete
da4474e5966c: Pull complete
eb2aec2b9c9f: Pull complete
11fdb6ecf8e5: Pull complete
376dcd7d98dc: Pull complete
Digest: sha256:11a73dc54b02fef68f7c2d275bcce78410238464f7d7b8b18442f39ff1ef30c3
Status: Downloaded newer image for linuxacademycontent/prices-base-price:1
f3ea998215eae62d85edcd18cf122d049334e9961268ee9b3efbd77929a1cff7


## Create the sales container.
Create a container for the component that serves products on sale.
cloud_user@ip-10-0-1-101:~$ docker run --name sales -d --network prices-net linuxacademycontent/prices-sales:1
3c9464d019d8f3effe3a92378d057db8d10bfabdc8a8c0763ea5a0ef345d14d4
cloud_user@ip-10-0-1-101:~$


### Create the total-price container.
## Create a container for the component that serves the total prices of products.
cloud_user@ip-10-0-1-101:~$ docker run --name total-price -d --network prices-net -p 8080:80 linuxacademycontent/prices-total-price:1
Unable to find image 'linuxacademycontent/prices-total-price:1' locally
1: Pulling from linuxacademycontent/prices-total-price
e79bb959ec00: Pull complete
d4b7902036fe: Pull complete
1b2a72d4e030: Pull complete
d54db43011fd: Pull complete
69d473365bb3: Pull complete
6e2490ee2dc8: Pull complete
964e7de7abca: Pull complete
95a255758e4c: Pull complete
e4d3cfbf38c0: Pull complete
10f99269d425: Pull complete
7aaadaa0a859: Pull complete
fb86fab35b78: Pull complete
Digest: sha256:1aced9f7b1ec8c28d432dad865de09b42bdfb4dcd98613dbf6ab30dee9d1584b
Status: Downloaded newer image for linuxacademycontent/prices-total-price:1
7d42b1fd1af49faf182a78dbb77fd3d189a2865760a7645c9f571f63e887abfb
 
#### Verify that everything is set up correctly.
cloud_user@ip-10-0-1-101:~$ curl localhost:8080
{
    "description": "A list of total prices, including discounts.",
    "products": [
        {
            "name": "apple",
            "price": "0.98"
        },
        {
            "name": "banana",
            "price": "1.00"
        },
        {
            "name": "blueberry",
            "price": "3.99"
        },
        {
            "name": "coconut",
            "price": "4.99"
        },
        {
            "name": "cranberry",
            "price": "2.09"
        },
        {
            "name": "cucumber",
            "price": "0.50"
        },
        {
            "name": "currant",
            "price": "2.00"
        },
        {
            "name": "olive",
            "price": "2.50"
        },
        {
            "name": "orange",
            "price": "1.31"
        },
        {
            "name": "pamelo",
            "price": "3.00"
        },
        {
            "name": "papaya",
            "price": "4.75"
        }
    ]
}cloud_user@ip-10-0-1-101:~$

