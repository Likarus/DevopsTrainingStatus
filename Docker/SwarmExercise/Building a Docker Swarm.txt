Building a Docker Swarm

Learning Objectives
	Install Docker CE on all three nodes.
	Configure the swarm manager.
	Join the worker nodes to the cluster.


need 1 master server an 2 node servers
######
1. On all three servers, install Docker CE.

cloud_user@ip-10-0-1-103:~$ sudo apt-get update
[sudo] password for cloud_user:
Sorry, try again.
[sudo] password for cloud_user:
H.........
.......
ocessing triggers for man-db (2.8.3-2ubuntu0.1) ...
cloud_user@ip-10-0-1-103:~$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
OK
cloud_user@ip-10-0-1-103:~$ sudo add-apt-repository \
>   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
>   $(lsb_release -cs) \
>   stable"
Hit:1 http://us-east-1.ec2.archive.ubuntu.com/ubuntu bionic InRelease
...............
Hit:4 https://download.docker.com/linux/ubuntu bionic InRelease
Hit:5 http://security.ubuntu.com/ubuntu bionic-security InRelease
Reading package lists... Done

cloud_user@ip-10-0-1-103:~$ sudo apt-get install -y docker-ce=5:18.09.5~3-0~ubuntu-bionic docker-ce-cli=5:18.09.5~3-0~ubuntu-bionic containerd.io
Reading package lists... Done
.......
Processing triggers for ureadahead (0.100.0-21) 

######################
2. Add cloud_user to the Docker group so that you can run docker commands as cloud_user.

sudo usermod -a -G docker cloud_user  ---> log out/in  

cloud_user@ip-10-0-1-101:~$ docker version
Client:
 Version:           18.09.5
 API version:       1.39
 Go version:        go1.10.8
 Git commit:        e8ff056
 Built:             Thu Apr 11 04:43:57 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          18.09.5
  API version:      1.39 (minimum version 1.12)
  Go version:       go1.10.8
  Git commit:       e8ff056
  Built:            Thu Apr 11 04:10:53 2019
  OS/Arch:          linux/amd64
  Experimental:     false


#######################################
Configure the swarm manager.
########################################
1. On the swarm manager server, initialize the swarm. Be sure to replace <swarm manager private IP> in this command with the actual Private IP of the swarm manager (NOT the public IP).

cloud_user@ip-10-0-1-101:~$ docker swarm init --advertise-addr 10.0.1.101
Swarm initialized: current node (g7ir1d23borlkxrbyqbhurk82) is now a manager.

To add a worker to this swarm, run the following command:
    docker swarm join --token SWMTKN-1-57661lozr1pcqobrtpsqi0q4g6jy4bf009sp9dkq4vzmgriven-3b5xtspimewc84dabfl865vzy 10.0.1.101:2377
To add a manager to this swarm, run 'docker swarm join-token manager' and follow the instructions.

2. Join the worker nodes to the cluster.
  On the swarm manager, get a join command with a token:
docker swarm join-token worker
  
  This should provide a command that begins docker swarm join 
	(docker swarm join --token SWMTKN-1-57661lozr1pcqobrtpsqi0q4g6jy4bf009sp9dkq4vzmgriven-3b5xtspimewc84dabfl865vzy 10.0.1.101:2377)

cloud_user@ip-10-0-1-102:~$ docker swarm join --token SWMTKN-1-57661lozr1pcqobrtpsqi0q4g6jy4bf009sp9dkq4vzmgriven-3b5xtspimewc84dabfl865vzy 10.0.1.101:2377
This node joined a swarm as a worker.

cloud_user@ip-10-0-1-103:~$ docker swarm join --token SWMTKN-1-57661lozr1pcqobrtpsqi0q4g6jy4bf009sp9dkq4vzmgriven-3b5xtspimewc84dabfl865vzy 10.0.1.101:2377
This node joined a swarm as a worker.


3. Go back to the swarm manager and list the nodes.

docker node ls
Verify that you can see all three servers listed (including the manager). All three should have a status of READY. Once all three servers are ready, you have built your own Docker swarm cluster!


cloud_user@ip-10-0-1-101:~$ docker node ls
ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION
g7ir1d23borlkxrbyqbhurk82 *   ip-10-0-1-101       Ready               Active              Leader              18.09.5
f4z968b3ak1rcnlxq8xb4wbrp     ip-10-0-1-102       Ready               Active                                  18.09.5
zl8926qgirxk7g7sx6gs7acm5     ip-10-0-1-103       Ready               Active                                  18.09.5
